{"ast":null,"code":"import _inherits from \"D:\\\\pplnews\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\inherits.js\";\nimport _createSuper from \"D:\\\\pplnews\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createSuper.js\";\nimport _createForOfIteratorHelper from \"D:\\\\pplnews\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createForOfIteratorHelper.js\";\nimport _classCallCheck from \"D:\\\\pplnews\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"D:\\\\pplnews\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { __decorate, __metadata, __param } from 'tslib';\nimport { CommonModule } from '@angular/common';\nimport { Injectable, EventEmitter, ViewChild, ElementRef, Input, Output, Component, Renderer2, Directive, Host, ChangeDetectionStrategy, Optional, Attribute, ChangeDetectorRef, Pipe, HostListener, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSlider, MAT_SLIDER_VALUE_ACCESSOR, MatSliderModule } from '@angular/material/slider';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/cdk/a11y';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/material/button';\nimport * as ɵngcc5 from '@angular/material/icon';\nimport * as ɵngcc6 from '@angular/material/slider';\nvar _c0 = [\"player\"];\nvar _c1 = [\"video\"];\n\nfunction MatVideoComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 7);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r1.getOverlayClass(\"visible\", \"hidden\"));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.title, \" \");\n  }\n}\n\nfunction MatVideoComponent_div_8_mat_frame_by_frame_control_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-frame-by-frame-control\", 21);\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n\n    var _r2 = ɵngcc0.ɵɵreference(4);\n\n    ɵngcc0.ɵɵproperty(\"video\", _r2)(\"fps\", ctx_r4.fps);\n  }\n}\n\nfunction MatVideoComponent_div_8_mat_quality_control_10_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-quality-control\", 16);\n  }\n\n  if (rf & 2) {\n    ɵngcc0.ɵɵnextContext(2);\n\n    var _r2 = ɵngcc0.ɵɵreference(4);\n\n    ɵngcc0.ɵɵproperty(\"video\", _r2);\n  }\n}\n\nfunction MatVideoComponent_div_8_mat_download_button_11_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-download-button\", 22);\n  }\n\n  if (rf & 2) {\n    var ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n\n    var _r2 = ɵngcc0.ɵɵreference(4);\n\n    ɵngcc0.ɵɵproperty(\"title\", ctx_r6.title)(\"video\", _r2);\n  }\n}\n\nfunction MatVideoComponent_div_8_mat_fullscreen_button_12_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r9 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"mat-fullscreen-button\", 23);\n    ɵngcc0.ɵɵlistener(\"fullscreenChanged\", function MatVideoComponent_div_8_mat_fullscreen_button_12_Template_mat_fullscreen_button_fullscreenChanged_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r9);\n      var ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r8.isFullscreen = $event;\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n\n    var _r0 = ɵngcc0.ɵɵreference(1);\n\n    ɵngcc0.ɵɵproperty(\"player\", _r0)(\"keyboard\", ctx_r7.keyboard);\n  }\n}\n\nfunction MatVideoComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r11 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 8)(1, \"div\", 9);\n    ɵngcc0.ɵɵelement(2, \"mat-seek-progress-control\", 10);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"div\", 11)(4, \"div\", 12)(5, \"mat-play-button\", 13);\n    ɵngcc0.ɵɵlistener(\"playChanged\", function MatVideoComponent_div_8_Template_mat_play_button_playChanged_5_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r11);\n      var ctx_r10 = ɵngcc0.ɵɵnextContext();\n      return ctx_r10.playing = $event;\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(6, MatVideoComponent_div_8_mat_frame_by_frame_control_6_Template, 1, 2, \"mat-frame-by-frame-control\", 14);\n    ɵngcc0.ɵɵelementStart(7, \"mat-volume-control\", 15);\n    ɵngcc0.ɵɵlistener(\"mutedChanged\", function MatVideoComponent_div_8_Template_mat_volume_control_mutedChanged_7_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r11);\n      var ctx_r12 = ɵngcc0.ɵɵnextContext();\n      ctx_r12.muted = $event;\n      return ctx_r12.mutedChange.emit(ctx_r12.muted);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(8, \"mat-time-control\", 16);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(9, \"div\", 17);\n    ɵngcc0.ɵɵtemplate(10, MatVideoComponent_div_8_mat_quality_control_10_Template, 1, 1, \"mat-quality-control\", 18);\n    ɵngcc0.ɵɵtemplate(11, MatVideoComponent_div_8_mat_download_button_11_Template, 1, 2, \"mat-download-button\", 19);\n    ɵngcc0.ɵɵtemplate(12, MatVideoComponent_div_8_mat_fullscreen_button_12_Template, 1, 2, \"mat-fullscreen-button\", 20);\n    ɵngcc0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n\n    var _r2 = ɵngcc0.ɵɵreference(4);\n\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r3.getOverlayClass(\"visible\", \"hidden\"));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"color\", ctx_r3.color)(\"video\", _r2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"video\", _r2)(\"keyboard\", ctx_r3.keyboard);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r3.showFrameByFrame);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"muted\", ctx_r3.muted)(\"color\", ctx_r3.color)(\"video\", _r2)(\"keyboard\", ctx_r3.keyboard);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"video\", _r2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r3.quality);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r3.download);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r3.fullscreen);\n  }\n}\n\nvar _c2 = [[[\"source\"]], [[\"track\"]]];\nvar _c3 = [\"source\", \"track\"];\n\nfunction MatFullscreenButtonComponent_mat_icon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-icon\");\n    ɵngcc0.ɵɵtext(1, \"fullscreen\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction MatFullscreenButtonComponent_mat_icon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-icon\");\n    ɵngcc0.ɵɵtext(1, \"fullscreen_exit\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction MatPlayButtonComponent_mat_icon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-icon\");\n    ɵngcc0.ɵɵtext(1, \"play_arrow\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction MatPlayButtonComponent_mat_icon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-icon\");\n    ɵngcc0.ɵɵtext(1, \"pause\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction MatQualityControlComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.video.videoHeight, \"p\\n\");\n  }\n}\n\nfunction MatVideoSpinnerComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\");\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMap(ctx_r0.spinner);\n  }\n}\n\nfunction MatVolumeControlComponent_mat_icon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-icon\");\n    ɵngcc0.ɵɵtext(1, \"volume_off\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction MatVolumeControlComponent_mat_icon_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-icon\");\n    ɵngcc0.ɵɵtext(1, \"volume_mute\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction MatVolumeControlComponent_mat_icon_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-icon\");\n    ɵngcc0.ɵɵtext(1, \"volume_down\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction MatVolumeControlComponent_mat_icon_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-icon\");\n    ɵngcc0.ɵɵtext(1, \"volume_up\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nvar EventService = /*#__PURE__*/(function () {\n  var EventService = /*#__PURE__*/function () {\n    function EventService() {\n      _classCallCheck(this, EventService);\n    }\n\n    _createClass(EventService, [{\n      key: \"addEvents\",\n      value: function addEvents(renderer, events) {\n        var _iterator = _createForOfIteratorHelper(events),\n            _step;\n\n        try {\n          var _loop = function _loop() {\n            var event = _step.value;\n            event.dispose = renderer.listen(event.element, event.name, function (newEvent) {\n              return event.callback(newEvent);\n            });\n          };\n\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            _loop();\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    }, {\n      key: \"removeEvents\",\n      value: function removeEvents(events) {\n        var _iterator2 = _createForOfIteratorHelper(events),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var event = _step2.value;\n            if (event.dispose) event.dispose();\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n    }]);\n\n    return EventService;\n  }();\n\n  EventService.ɵfac = function EventService_Factory(t) {\n    return new (t || EventService)();\n  };\n\n  EventService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: EventService,\n    factory: function factory(t) {\n      return EventService.ɵfac(t);\n    }\n  });\n  EventService = __decorate([__metadata(\"design:paramtypes\", [])], EventService);\n  return EventService;\n})();\nvar MatVideoComponent = /*#__PURE__*/(function () {\n  var MatVideoComponent = /*#__PURE__*/function () {\n    function MatVideoComponent(renderer, evt) {\n      _classCallCheck(this, MatVideoComponent);\n\n      this.renderer = renderer;\n      this.evt = evt;\n      this.src = null;\n      this.title = null;\n      this.autoplay = false;\n      this.preload = true;\n      this.loop = false;\n      this.quality = true;\n      this.fullscreen = true;\n      this.showFrameByFrame = false;\n      this.fps = 29.97;\n      this.download = false;\n      this.color = 'primary';\n      this.spinner = 'spin';\n      this.poster = null;\n      this.keyboard = true;\n      this.overlay = null;\n      this.muted = false;\n      this.mutedChange = new EventEmitter();\n      this.timeChange = new EventEmitter();\n      this.playing = false;\n      this.isFullscreen = false;\n      this.videoLoaded = false;\n      this.isMouseMoving = false;\n      this.isMouseMovingTimeout = 2000;\n    }\n\n    _createClass(MatVideoComponent, [{\n      key: \"time\",\n      get: function get() {\n        return this.getVideoTag().currentTime;\n      },\n      set: function set(val) {\n        var _this = this;\n\n        var video = this.getVideoTag();\n\n        if (video && val) {\n          if (val > video.duration) {\n            val = video.duration;\n          }\n\n          if (val < 0) {\n            val = 0;\n          }\n\n          if (val !== video.currentTime) {\n            video.currentTime = val;\n          }\n\n          if (this.lastTime !== video.currentTime) {\n            setTimeout(function () {\n              return _this.timeChange.emit(video.currentTime);\n            }, 0);\n            this.lastTime = video.currentTime;\n          }\n        }\n      }\n    }, {\n      key: \"ngAfterViewInit\",\n      value: function ngAfterViewInit() {\n        var _this2 = this;\n\n        this.events = [{\n          element: this.video.nativeElement,\n          name: 'loadstart',\n          callback: function callback(event) {\n            return _this2.videoLoaded = false;\n          },\n          dispose: null\n        }, {\n          element: this.video.nativeElement,\n          name: 'loadedmetadata',\n          callback: function callback(event) {\n            return _this2.evLoadedMetadata(event);\n          },\n          dispose: null\n        }, {\n          element: this.video.nativeElement,\n          name: 'error',\n          callback: function callback(event) {\n            return console.error('Unhandled Video Error', event);\n          },\n          dispose: null\n        }, {\n          element: this.video.nativeElement,\n          name: 'contextmenu',\n          callback: function callback(event) {\n            return event.preventDefault();\n          },\n          dispose: null\n        }, {\n          element: this.video.nativeElement,\n          name: 'timeupdate',\n          callback: function callback(event) {\n            return _this2.evTimeUpdate(event);\n          },\n          dispose: null\n        }, {\n          element: this.player.nativeElement,\n          name: 'mousemove',\n          callback: function callback(event) {\n            return _this2.evMouseMove(event);\n          },\n          dispose: null\n        }];\n\n        this.video.nativeElement.onloadeddata = function () {\n          return _this2.videoLoaded = true;\n        };\n\n        this.evt.addEvents(this.renderer, this.events);\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this.video.nativeElement.onloadeddata = null;\n        this.evt.removeEvents(this.events);\n      }\n    }, {\n      key: \"load\",\n      value: function load() {\n        if (this.video && this.video.nativeElement) this.video.nativeElement.load();\n      }\n    }, {\n      key: \"getVideoTag\",\n      value: function getVideoTag() {\n        return this.video && this.video.nativeElement ? this.video.nativeElement : null;\n      }\n    }, {\n      key: \"evLoadedMetadata\",\n      value: function evLoadedMetadata(event) {\n        this.videoWidth = this.video.nativeElement.videoWidth;\n        this.videoHeight = this.video.nativeElement.videoHeight;\n        this.videoLoaded = true;\n      }\n    }, {\n      key: \"evMouseMove\",\n      value: function evMouseMove(event) {\n        var _this3 = this;\n\n        this.isMouseMoving = true;\n        clearTimeout(this.isMouseMovingTimer);\n        this.isMouseMovingTimer = setTimeout(function () {\n          _this3.isMouseMoving = false;\n        }, this.isMouseMovingTimeout);\n      }\n    }, {\n      key: \"evTimeUpdate\",\n      value: function evTimeUpdate(event) {\n        this.time = this.getVideoTag().currentTime;\n      }\n    }, {\n      key: \"getOverlayClass\",\n      value: function getOverlayClass(activeClass, inactiveClass) {\n        if (this.overlay === null) {\n          return !this.playing || this.isMouseMoving ? activeClass : inactiveClass;\n        } else {\n          return this.overlay ? activeClass : inactiveClass;\n        }\n      }\n    }]);\n\n    return MatVideoComponent;\n  }();\n\n  MatVideoComponent.ɵfac = function MatVideoComponent_Factory(t) {\n    return new (t || MatVideoComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(EventService));\n  };\n\n  MatVideoComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MatVideoComponent,\n    selectors: [[\"mat-video\"]],\n    viewQuery: function MatVideoComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n        ɵngcc0.ɵɵviewQuery(_c1, 5);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.player = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.video = _t.first);\n      }\n    },\n    inputs: {\n      src: \"src\",\n      title: \"title\",\n      autoplay: \"autoplay\",\n      preload: \"preload\",\n      loop: \"loop\",\n      quality: \"quality\",\n      fullscreen: \"fullscreen\",\n      showFrameByFrame: \"showFrameByFrame\",\n      fps: \"fps\",\n      download: \"download\",\n      color: \"color\",\n      spinner: \"spinner\",\n      poster: \"poster\",\n      keyboard: \"keyboard\",\n      overlay: \"overlay\",\n      muted: \"muted\",\n      time: \"time\"\n    },\n    outputs: {\n      mutedChange: \"mutedChange\",\n      timeChange: \"timeChange\"\n    },\n    ngContentSelectors: _c3,\n    decls: 10,\n    vars: 10,\n    consts: [[1, \"videoplayer\", 3, \"ngClass\"], [\"player\", \"\"], [\"class\", \"header\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"video\", 3, \"preload\"], [\"video\", \"\"], [\"class\", \"controls\", 3, \"ngClass\", 4, \"ngIf\"], [3, \"spinner\", \"video\"], [1, \"header\", 3, \"ngClass\"], [1, \"controls\", 3, \"ngClass\"], [1, \"progress\"], [3, \"color\", \"video\"], [1, \"menu\"], [1, \"left\"], [3, \"video\", \"keyboard\", \"playChanged\"], [3, \"video\", \"fps\", 4, \"ngIf\"], [3, \"muted\", \"color\", \"video\", \"keyboard\", \"mutedChanged\"], [3, \"video\"], [1, \"right\"], [3, \"video\", 4, \"ngIf\"], [3, \"title\", \"video\", 4, \"ngIf\"], [3, \"player\", \"keyboard\", \"fullscreenChanged\", 4, \"ngIf\"], [3, \"video\", \"fps\"], [3, \"title\", \"video\"], [3, \"player\", \"keyboard\", \"fullscreenChanged\"]],\n    template: function MatVideoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵtemplate(2, MatVideoComponent_div_2_Template, 2, 2, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"video\", 3, 4);\n        ɵngcc0.ɵɵprojection(5);\n        ɵngcc0.ɵɵprojection(6, 1);\n        ɵngcc0.ɵɵtext(7, \" This browser does not support HTML5 video. \");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(8, MatVideoComponent_div_8_Template, 13, 14, \"div\", 5);\n        ɵngcc0.ɵɵelement(9, \"mat-video-spinner\", 6);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        var _r2 = ɵngcc0.ɵɵreference(4);\n\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.getOverlayClass(\"show-mouse\", \"hide-mouse\"));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.title);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"preload\", ctx.preload ? \"auto\" : \"metadata\");\n        ɵngcc0.ɵɵattribute(\"src\", ctx.src ? ctx.src : null, ɵngcc0.ɵɵsanitizeUrl)(\"autoplay\", ctx.autoplay ? true : null)(\"poster\", ctx.poster ? ctx.poster : null, ɵngcc0.ɵɵsanitizeUrl)(\"loop\", ctx.loop ? ctx.loop : null);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.videoLoaded);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"spinner\", ctx.spinner)(\"video\", _r2);\n      }\n    },\n    directives: function directives() {\n      return [ɵngcc1.NgClass, ɵngcc1.NgIf, MatSeekProgressControlComponent, MatPlayButtonComponent, MatFrameByFrameControlComponent, MatVolumeControlComponent, MatTimeControlComponent, MatQualityControlComponent, MatDownloadButtonComponent, MatFullscreenButtonComponent, MatVideoSpinnerComponent];\n    },\n    styles: [\".videoplayer[_ngcontent-%COMP%]{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;background-color:#000;position:relative;width:100%;height:100%}.header[_ngcontent-%COMP%]{color:#fff;display:flex;justify-content:center;align-items:center;position:absolute;left:0;top:0;padding:14px 0;width:100%;z-index:1;background-image:linear-gradient(to top,rgba(0,0,0,0),rgba(0,0,0,.65))}.video[_ngcontent-%COMP%]{display:block;width:100%;height:100%;z-index:0}.controls[_ngcontent-%COMP%]{color:#fff;position:absolute;left:0;bottom:0;width:100%;z-index:1;background-image:linear-gradient(to bottom,rgba(0,0,0,0),rgba(0,0,0,.65))}.controls[_ngcontent-%COMP%]   .progress[_ngcontent-%COMP%]{height:26px}.controls[_ngcontent-%COMP%]   .menu[_ngcontent-%COMP%]{display:flex;align-items:center;flex-direction:row;justify-content:space-between;height:48px}.controls[_ngcontent-%COMP%]   .menu[_ngcontent-%COMP%]   .left[_ngcontent-%COMP%]{justify-content:flex-start}.controls[_ngcontent-%COMP%]   .menu[_ngcontent-%COMP%]   .right[_ngcontent-%COMP%]{justify-content:flex-end}.visible[_ngcontent-%COMP%]{visibility:visible;opacity:1;transition:opacity .5s linear}.hidden[_ngcontent-%COMP%]{visibility:hidden;opacity:0;transition:visibility .5s,opacity .5s linear}.show-mouse[_ngcontent-%COMP%]{cursor:default}.hide-mouse[_ngcontent-%COMP%]{cursor:none}\", \"@font-face{font-family:'Material Icons';font-style:normal;font-weight:400;src:url(https://fonts.gstatic.com/s/materialicons/v36/flUhRq6tzZclQEJ-Vdg-IuiaDsNc.woff2) format('woff2')} .material-icons{font-family:'Material Icons';font-weight:400;font-style:normal;font-size:24px;line-height:1;letter-spacing:normal;text-transform:none;display:inline-block;white-space:nowrap;word-wrap:normal;direction:ltr;font-feature-settings:'liga';-webkit-font-feature-settings:'liga';-webkit-font-smoothing:antialiased}\"]\n  });\n\n  __decorate([ViewChild('player'), __metadata(\"design:type\", ElementRef)], MatVideoComponent.prototype, \"player\", void 0);\n\n  __decorate([ViewChild('video'), __metadata(\"design:type\", ElementRef)], MatVideoComponent.prototype, \"video\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], MatVideoComponent.prototype, \"src\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], MatVideoComponent.prototype, \"title\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], MatVideoComponent.prototype, \"autoplay\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], MatVideoComponent.prototype, \"preload\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], MatVideoComponent.prototype, \"loop\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], MatVideoComponent.prototype, \"quality\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], MatVideoComponent.prototype, \"fullscreen\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], MatVideoComponent.prototype, \"showFrameByFrame\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], MatVideoComponent.prototype, \"fps\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], MatVideoComponent.prototype, \"download\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], MatVideoComponent.prototype, \"color\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], MatVideoComponent.prototype, \"spinner\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], MatVideoComponent.prototype, \"poster\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], MatVideoComponent.prototype, \"keyboard\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], MatVideoComponent.prototype, \"overlay\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], MatVideoComponent.prototype, \"muted\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", Object)], MatVideoComponent.prototype, \"mutedChange\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number), __metadata(\"design:paramtypes\", [Number])], MatVideoComponent.prototype, \"time\", null);\n\n  __decorate([Output(), __metadata(\"design:type\", Object)], MatVideoComponent.prototype, \"timeChange\", void 0);\n\n  MatVideoComponent = __decorate([__metadata(\"design:paramtypes\", [Renderer2, EventService])], MatVideoComponent);\n  return MatVideoComponent;\n})();\nvar MatVideoSourceDirective = /*#__PURE__*/(function () {\n  var MatVideoSourceDirective = /*#__PURE__*/function () {\n    function MatVideoSourceDirective(matVideoComponent, el) {\n      _classCallCheck(this, MatVideoSourceDirective);\n\n      this.matVideoComponent = matVideoComponent;\n      this.el = el;\n      this.src = null;\n      this.type = null;\n      this.init = true;\n      this.video = matVideoComponent;\n      this.source = el.nativeElement;\n      this.init = false;\n    }\n\n    _createClass(MatVideoSourceDirective, [{\n      key: \"ngOnChanges\",\n      value: function ngOnChanges(changes) {\n        this.source.src = this.src;\n        this.source.type = this.type;\n        if (!this.init) this.video.load();\n      }\n    }]);\n\n    return MatVideoSourceDirective;\n  }();\n\n  MatVideoSourceDirective.ɵfac = function MatVideoSourceDirective_Factory(t) {\n    return new (t || MatVideoSourceDirective)(ɵngcc0.ɵɵdirectiveInject(MatVideoComponent, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  MatVideoSourceDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MatVideoSourceDirective,\n    selectors: [[\"\", \"matVideoSource\", \"\"]],\n    inputs: {\n      src: \"src\",\n      type: \"type\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", String)], MatVideoSourceDirective.prototype, \"src\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], MatVideoSourceDirective.prototype, \"type\", void 0);\n\n  MatVideoSourceDirective = __decorate([__param(0, Host()), __metadata(\"design:paramtypes\", [MatVideoComponent, ElementRef])], MatVideoSourceDirective);\n  return MatVideoSourceDirective;\n})();\nvar MatVideoTrackDirective = /*#__PURE__*/(function () {\n  var MatVideoTrackDirective = /*#__PURE__*/function () {\n    function MatVideoTrackDirective(matVideoComponent, el) {\n      _classCallCheck(this, MatVideoTrackDirective);\n\n      this.matVideoComponent = matVideoComponent;\n      this.el = el;\n      this.src = null;\n      this.kind = null;\n      this.srclang = null;\n      this.label = null;\n      this.init = true;\n      this.video = matVideoComponent;\n      this.track = el.nativeElement;\n      this.init = false;\n    }\n\n    _createClass(MatVideoTrackDirective, [{\n      key: \"ngOnChanges\",\n      value: function ngOnChanges(changes) {\n        this.track.src = this.src;\n        this.track.kind = this.kind;\n        this.track.srclang = this.srclang;\n        this.track.label = this.label;\n        if (!this.init) this.video.load();\n      }\n    }]);\n\n    return MatVideoTrackDirective;\n  }();\n\n  MatVideoTrackDirective.ɵfac = function MatVideoTrackDirective_Factory(t) {\n    return new (t || MatVideoTrackDirective)(ɵngcc0.ɵɵdirectiveInject(MatVideoComponent, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  MatVideoTrackDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MatVideoTrackDirective,\n    selectors: [[\"\", \"matVideoTrack\", \"\"]],\n    inputs: {\n      src: \"src\",\n      kind: \"kind\",\n      srclang: \"srclang\",\n      label: \"label\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", String)], MatVideoTrackDirective.prototype, \"src\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], MatVideoTrackDirective.prototype, \"kind\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], MatVideoTrackDirective.prototype, \"srclang\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], MatVideoTrackDirective.prototype, \"label\", void 0);\n\n  MatVideoTrackDirective = __decorate([__param(0, Host()), __metadata(\"design:paramtypes\", [MatVideoComponent, ElementRef])], MatVideoTrackDirective);\n  /** Counter used to generate unique IDs for progress bars. */\n\n  return MatVideoTrackDirective;\n})();\nvar sliderprogressbarId = 0;\nvar MatSliderProgressBarComponent = /*#__PURE__*/(function () {\n  var MatSliderProgressBarComponent = /*#__PURE__*/function (_MatSlider) {\n    _inherits(MatSliderProgressBarComponent, _MatSlider);\n\n    var _super = _createSuper(MatSliderProgressBarComponent);\n\n    function MatSliderProgressBarComponent(elementRef, focusMonitor, changeDetectorRef, dir, tabIndex) {\n      var _this4;\n\n      _classCallCheck(this, MatSliderProgressBarComponent);\n\n      _this4 = _super.call(this, elementRef, focusMonitor, changeDetectorRef, dir, tabIndex);\n      _this4.mode = 'buffer';\n      _this4.value = 0;\n      _this4._bufferValue = 0;\n      /** The id of the progress bar. */\n\n      _this4.sliderprogressbarId = \"mat-slider-progress-bar-\".concat(sliderprogressbarId++);\n      _this4.tabIndex = parseInt(tabIndex) || 0;\n      return _this4;\n    }\n    /** Buffer value of the progress bar. Defaults to zero. */\n\n\n    _createClass(MatSliderProgressBarComponent, [{\n      key: \"bufferValue\",\n      get: function get() {\n        return this._bufferValue;\n      },\n      set: function set(v) {\n        this._bufferValue = clamp(v || 0);\n      }\n      /** CSS styles for the track fill element. */\n\n    }, {\n      key: \"_trackBufferStyles\",\n      get: function get() {\n        if (this.mode === 'buffer') {\n          var axis = this.vertical ? 'Y' : 'X';\n          return {\n            'transform': \"translate\".concat(axis, \"(0px) scale\").concat(axis, \"(\").concat(this._bufferValue / 100, \")\")\n          };\n        }\n      }\n    }]);\n\n    return MatSliderProgressBarComponent;\n  }(MatSlider);\n\n  MatSliderProgressBarComponent.ɵfac = function MatSliderProgressBarComponent_Factory(t) {\n    return new (t || MatSliderProgressBarComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'));\n  };\n\n  MatSliderProgressBarComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MatSliderProgressBarComponent,\n    selectors: [[\"mat-slider-progress-bar\"]],\n    hostAttrs: [\"role\", \"slider\", 1, \"mat-slider\"],\n    hostVars: 24,\n    hostBindings: function MatSliderProgressBarComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatSliderProgressBarComponent_focus_HostBindingHandler() {\n          return ctx._onFocus();\n        })(\"blur\", function MatSliderProgressBarComponent_blur_HostBindingHandler() {\n          return ctx._onBlur();\n        })(\"click\", function MatSliderProgressBarComponent_click_HostBindingHandler($event) {\n          return ctx[\"_onClick\"] ? ctx[\"_onClick\"]($event) : null;\n        })(\"mousedown\", function MatSliderProgressBarComponent_mousedown_HostBindingHandler($event) {\n          return ctx[\"_onMousedown\"] ? ctx[\"_onMousedown\"]($event) : null;\n        })(\"keydown\", function MatSliderProgressBarComponent_keydown_HostBindingHandler($event) {\n          return ctx._onKeydown($event);\n        })(\"keyup\", function MatSliderProgressBarComponent_keyup_HostBindingHandler() {\n          return ctx._onKeyup();\n        })(\"mouseenter\", function MatSliderProgressBarComponent_mouseenter_HostBindingHandler() {\n          return ctx._onMouseenter();\n        })(\"slide\", function MatSliderProgressBarComponent_slide_HostBindingHandler($event) {\n          return ctx._onSlide($event);\n        })(\"slideend\", function MatSliderProgressBarComponent_slideend_HostBindingHandler() {\n          return ctx._onSlideEnd();\n        })(\"slidestart\", function MatSliderProgressBarComponent_slidestart_HostBindingHandler($event) {\n          return ctx._onSlideStart($event);\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled)(\"aria-valuemax\", ctx.max)(\"aria-valuemin\", ctx.min)(\"aria-valuenow\", ctx.value)(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n        ɵngcc0.ɵɵclassProp(\"mat-slider-disabled\", ctx.disabled)(\"mat-slider-has-ticks\", ctx.tickInterval)(\"mat-slider-horizontal\", !ctx.vertical)(\"mat-slider-axis-inverted\", ctx._invertAxis)(\"mat-slider-sliding\", ctx._isSliding)(\"mat-slider-thumb-label-showing\", ctx.thumbLabel)(\"mat-slider-vertical\", ctx.vertical)(\"mat-slider-min-value\", ctx._isMinValue)(\"mat-slider-hide-last-tick\", ctx.disabled || ctx._isMinValue && ctx._thumbGap && ctx._invertAxis);\n      }\n    },\n    inputs: {\n      disabled: \"disabled\",\n      color: \"color\",\n      tabIndex: \"tabIndex\",\n      mode: \"mode\",\n      value: \"value\",\n      bufferValue: \"bufferValue\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDER_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 18,\n    vars: 8,\n    consts: [[1, \"mat-slider-wrapper\"], [\"sliderWrapper\", \"\"], [1, \"mat-slider-track-wrapper\"], [\"width\", \"100%\", \"height\", \"2\", \"focusable\", \"false\", 1, \"mat-slider-progress-background\"], [\"x\", \"2.5\", \"y\", \"0\", \"width\", \"5\", \"height\", \"2.5\", \"patternUnits\", \"userSpaceOnUse\", 3, \"id\"], [\"cx\", \"1.25\", \"cy\", \"1.25\", \"r\", \"1.25\"], [\"width\", \"100%\", \"height\", \"100%\"], [1, \"mat-slider-track-fill\", \"mat-slider-track-buffer\", 3, \"ngStyle\"], [1, \"mat-slider-track-fill\", 3, \"ngStyle\"], [1, \"mat-slider-ticks-container\", 3, \"ngStyle\"], [1, \"mat-slider-ticks\", 3, \"ngStyle\"], [1, \"mat-slider-thumb-container\", 3, \"ngStyle\"], [1, \"mat-slider-focus-ring\"], [1, \"mat-slider-thumb\"], [1, \"mat-slider-thumb-label\"], [1, \"mat-slider-thumb-label-text\"]],\n    template: function MatSliderProgressBarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1)(2, \"div\", 2);\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(3, \"svg\", 3)(4, \"defs\")(5, \"pattern\", 4);\n        ɵngcc0.ɵɵelement(6, \"circle\", 5);\n        ɵngcc0.ɵɵelementEnd()();\n        ɵngcc0.ɵɵelement(7, \"rect\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelement(8, \"div\", 7)(9, \"div\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 9);\n        ɵngcc0.ɵɵelement(11, \"div\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(12, \"div\", 11);\n        ɵngcc0.ɵɵelement(13, \"div\", 12)(14, \"div\", 13);\n        ɵngcc0.ɵɵelementStart(15, \"div\", 14)(16, \"span\", 15);\n        ɵngcc0.ɵɵtext(17);\n        ɵngcc0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.sliderprogressbarId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵattribute(\"fill\", \"url(#\" + ctx.sliderprogressbarId + \")\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._trackBufferStyles);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._trackFillStyles);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._ticksContainerStyles);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._ticksStyles);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._thumbContainerStyles);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵtextInterpolate(ctx.displayValue);\n      }\n    },\n    directives: [ɵngcc1.NgStyle],\n    styles: [\"[_nghost-%COMP%]{width:100%}.mat-slider-progress-background[_ngcontent-%COMP%]{position:absolute;height:2px;width:100%;fill:#d3d3d3}.mat-slider-track-buffer[_ngcontent-%COMP%]{background-color:#d3d3d3!important}.mat-slider-thumb[_ngcontent-%COMP%]{border-color:transparent!important;visibility:hidden;opacity:0;transition:visibility .2s,opacity .2s linear}[_nghost-%COMP%]:hover   .mat-slider-thumb[_ngcontent-%COMP%]{visibility:visible;opacity:1;transition:opacity .2s linear}\"],\n    changeDetection: 0\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", String)], MatSliderProgressBarComponent.prototype, \"mode\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], MatSliderProgressBarComponent.prototype, \"value\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number), __metadata(\"design:paramtypes\", [Number])], MatSliderProgressBarComponent.prototype, \"bufferValue\", null);\n\n  MatSliderProgressBarComponent = __decorate([__param(3, Optional()), __param(4, Attribute('tabindex')), __metadata(\"design:paramtypes\", [ElementRef, FocusMonitor, ChangeDetectorRef, Directionality, String])], MatSliderProgressBarComponent);\n  /** Clamps a value to be between two numbers, by default 0 and 100. */\n\n  return MatSliderProgressBarComponent;\n})();\n\nfunction clamp(v) {\n  var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 100;\n  return Math.max(min, Math.min(max, v));\n}\n\nvar SecondsToTimePipe = /*#__PURE__*/(function () {\n  var SecondsToTimePipe = /*#__PURE__*/function () {\n    function SecondsToTimePipe() {\n      _classCallCheck(this, SecondsToTimePipe);\n\n      this.times = {\n        year: 31557600,\n        month: 2629746,\n        day: 86400,\n        hour: 3600\n      };\n    }\n\n    _createClass(SecondsToTimePipe, [{\n      key: \"transform\",\n      value: function transform(seconds) {\n        if (!seconds) return '0:00';else {\n          var time_string = '';\n\n          for (var key in this.times) {\n            if (Math.floor(seconds / this.times[key]) > 0) {\n              time_string += Math.floor(seconds / this.times[key]).toString() + ':';\n              seconds = seconds - this.times[key] * Math.floor(seconds / this.times[key]);\n            }\n          }\n\n          time_string += Math.floor(seconds / 60).toString() + ':';\n          seconds = seconds - 60 * Math.floor(seconds / 60);\n          if (Math.floor(seconds) < 10) time_string += '0';\n          time_string += Math.floor(seconds).toString();\n          return time_string;\n        }\n      }\n    }]);\n\n    return SecondsToTimePipe;\n  }();\n\n  SecondsToTimePipe.ɵfac = function SecondsToTimePipe_Factory(t) {\n    return new (t || SecondsToTimePipe)();\n  };\n\n  SecondsToTimePipe.ɵpipe = /*@__PURE__*/ɵngcc0.ɵɵdefinePipe({\n    name: \"secondsToTime\",\n    type: SecondsToTimePipe,\n    pure: true\n  });\n  return SecondsToTimePipe;\n})();\nvar FullscreenService = /*#__PURE__*/(function () {\n  var FullscreenService = /*#__PURE__*/function () {\n    function FullscreenService() {\n      _classCallCheck(this, FullscreenService);\n\n      this.fnMap = [// Object keys\n      ['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror'], // New WebKit\n      ['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror'], // Old WebKit (Safari 5.1)\n      ['webkitRequestFullScreen', 'webkitCancelFullScreen', 'webkitCurrentFullScreenElement', 'webkitCancelFullScreen', 'webkitfullscreenchange', 'webkitfullscreenerror'], // Mozilla\n      ['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror'], // MS\n      ['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError']];\n      this.keyboardAllowed = typeof Element !== 'undefined' && 'ALLOW_KEYBOARD_INPUT' in Element;\n      var ret = {};\n      var val;\n\n      for (var i = 0; i < this.fnMap.length; i++) {\n        val = this.fnMap[i];\n\n        if (val && val[1] in document) {\n          for (i = 0; i < val.length; i++) {\n            // Map everything to the first list of keys\n            ret[this.fnMap[0][i].toString()] = val[i];\n          }\n\n          this.fn = ret;\n        }\n      }\n    }\n\n    _createClass(FullscreenService, [{\n      key: \"request\",\n      value: function request(elem) {\n        var request = this.fn.requestFullscreen;\n        elem = elem || document.documentElement; // Work around Safari 5.1 bug: reports support for\n        // keyboard in fullscreen even though it doesn't.\n        // Browser sniffing, since the alternative with\n        // setTimeout is even worse.\n\n        if (/5\\.1[.\\d]* Safari/.test(navigator.userAgent)) {\n          elem[request]();\n        } else {\n          elem[request](this.keyboardAllowed ? Element.ALLOW_KEYBOARD_INPUT : {});\n        }\n      }\n    }, {\n      key: \"exit\",\n      value: function exit() {\n        document[this.fn.exitFullscreen]();\n      }\n    }, {\n      key: \"toggle\",\n      value: function toggle(elem) {\n        if (this.isFullscreen()) {\n          this.exit();\n        } else {\n          this.request(elem);\n        }\n      }\n    }, {\n      key: \"onChange\",\n      value: function onChange(callback) {\n        document.addEventListener(this.fn.fullscreenchange, callback, false);\n      }\n    }, {\n      key: \"onError\",\n      value: function onError(callback) {\n        document.addEventListener(this.fn.fullscreenerror, callback, false);\n      }\n    }, {\n      key: \"isFullscreen\",\n      value: function isFullscreen() {\n        return Boolean(document[this.fn.fullscreenElement]);\n      }\n    }, {\n      key: \"isEnabled\",\n      value: function isEnabled() {\n        // Coerce to boolean in case of old WebKit\n        return Boolean(document[this.fn.fullscreenEnabled]);\n      }\n    }, {\n      key: \"getElement\",\n      value: function getElement() {\n        return document[this.fn.fullscreenElement];\n      }\n    }]);\n\n    return FullscreenService;\n  }();\n\n  FullscreenService.ɵfac = function FullscreenService_Factory(t) {\n    return new (t || FullscreenService)();\n  };\n\n  FullscreenService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: FullscreenService,\n    factory: function factory(t) {\n      return FullscreenService.ɵfac(t);\n    }\n  });\n  FullscreenService = __decorate([__metadata(\"design:paramtypes\", [])], FullscreenService);\n  return FullscreenService;\n})();\nvar MatDownloadButtonComponent = /*#__PURE__*/(function () {\n  var MatDownloadButtonComponent = /*#__PURE__*/_createClass(function MatDownloadButtonComponent() {\n    _classCallCheck(this, MatDownloadButtonComponent);\n  });\n\n  MatDownloadButtonComponent.ɵfac = function MatDownloadButtonComponent_Factory(t) {\n    return new (t || MatDownloadButtonComponent)();\n  };\n\n  MatDownloadButtonComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MatDownloadButtonComponent,\n    selectors: [[\"mat-download-button\"]],\n    inputs: {\n      video: \"video\",\n      title: \"title\"\n    },\n    decls: 3,\n    vars: 2,\n    consts: [[\"mat-icon-button\", \"\", 3, \"href\", \"download\"]],\n    template: function MatDownloadButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"a\", 0)(1, \"mat-icon\");\n        ɵngcc0.ɵɵtext(2, \"file_download\");\n        ɵngcc0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"href\", ctx.video == null ? null : ctx.video.currentSrc, ɵngcc0.ɵɵsanitizeUrl)(\"download\", ctx.title);\n      }\n    },\n    directives: [ɵngcc4.MatAnchor, ɵngcc5.MatIcon],\n    styles: [\"a[_ngcontent-%COMP%]{color:inherit;text-decoration:none}\"]\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", HTMLVideoElement)], MatDownloadButtonComponent.prototype, \"video\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], MatDownloadButtonComponent.prototype, \"title\", void 0);\n\n  MatDownloadButtonComponent = __decorate([__metadata(\"design:paramtypes\", [])], MatDownloadButtonComponent);\n  return MatDownloadButtonComponent;\n})();\nvar MatFrameByFrameControlComponent = /*#__PURE__*/(function () {\n  var MatFrameByFrameControlComponent = /*#__PURE__*/function () {\n    function MatFrameByFrameControlComponent() {\n      _classCallCheck(this, MatFrameByFrameControlComponent);\n\n      this.fps = 29.97;\n    }\n\n    _createClass(MatFrameByFrameControlComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {}\n    }, {\n      key: \"seekFrames\",\n      value: function seekFrames(nbFrames) {\n        if (!this.video.paused) {\n          this.video.pause();\n        }\n\n        var currentFrames = this.video.currentTime * this.fps;\n        var newPos = (currentFrames + nbFrames) / this.fps + 0.00001;\n        this.video.currentTime = newPos;\n      }\n    }]);\n\n    return MatFrameByFrameControlComponent;\n  }();\n\n  MatFrameByFrameControlComponent.ɵfac = function MatFrameByFrameControlComponent_Factory(t) {\n    return new (t || MatFrameByFrameControlComponent)();\n  };\n\n  MatFrameByFrameControlComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MatFrameByFrameControlComponent,\n    selectors: [[\"mat-frame-by-frame-control\"]],\n    inputs: {\n      fps: \"fps\",\n      video: \"video\"\n    },\n    decls: 12,\n    vars: 0,\n    consts: [[\"mat-icon-button\", \"\", 3, \"click\"]],\n    template: function MatFrameByFrameControlComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"button\", 0);\n        ɵngcc0.ɵɵlistener(\"click\", function MatFrameByFrameControlComponent_Template_button_click_0_listener() {\n          return ctx.seekFrames(-5);\n        });\n        ɵngcc0.ɵɵelementStart(1, \"mat-icon\");\n        ɵngcc0.ɵɵtext(2, \"skip_previous\");\n        ɵngcc0.ɵɵelementEnd()();\n        ɵngcc0.ɵɵelementStart(3, \"button\", 0);\n        ɵngcc0.ɵɵlistener(\"click\", function MatFrameByFrameControlComponent_Template_button_click_3_listener() {\n          return ctx.seekFrames(-1);\n        });\n        ɵngcc0.ɵɵelementStart(4, \"mat-icon\");\n        ɵngcc0.ɵɵtext(5, \"arrow_left\");\n        ɵngcc0.ɵɵelementEnd()();\n        ɵngcc0.ɵɵelementStart(6, \"button\", 0);\n        ɵngcc0.ɵɵlistener(\"click\", function MatFrameByFrameControlComponent_Template_button_click_6_listener() {\n          return ctx.seekFrames(1);\n        });\n        ɵngcc0.ɵɵelementStart(7, \"mat-icon\");\n        ɵngcc0.ɵɵtext(8, \"arrow_right\");\n        ɵngcc0.ɵɵelementEnd()();\n        ɵngcc0.ɵɵelementStart(9, \"button\", 0);\n        ɵngcc0.ɵɵlistener(\"click\", function MatFrameByFrameControlComponent_Template_button_click_9_listener() {\n          return ctx.seekFrames(5);\n        });\n        ɵngcc0.ɵɵelementStart(10, \"mat-icon\");\n        ɵngcc0.ɵɵtext(11, \"skip_next\");\n        ɵngcc0.ɵɵelementEnd()();\n      }\n    },\n    directives: [ɵngcc4.MatButton, ɵngcc5.MatIcon],\n    styles: [\"\"]\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", HTMLVideoElement)], MatFrameByFrameControlComponent.prototype, \"video\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], MatFrameByFrameControlComponent.prototype, \"fps\", void 0);\n\n  MatFrameByFrameControlComponent = __decorate([__metadata(\"design:paramtypes\", [])], MatFrameByFrameControlComponent);\n  return MatFrameByFrameControlComponent;\n})();\nvar MatFullscreenButtonComponent = /*#__PURE__*/(function () {\n  var MatFullscreenButtonComponent = /*#__PURE__*/function () {\n    function MatFullscreenButtonComponent(fscreen, evt) {\n      _classCallCheck(this, MatFullscreenButtonComponent);\n\n      this.fscreen = fscreen;\n      this.evt = evt;\n      this.canFullscreen = false;\n      this.fullscreen = false;\n      this.fullscreenChanged = new EventEmitter();\n      this.keyboard = true;\n    }\n\n    _createClass(MatFullscreenButtonComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var _this5 = this;\n\n        if (this.fscreen.isEnabled()) this.canFullscreen = true;\n        this.fscreen.onChange(function (event) {\n          return _this5.fscreen.isFullscreen() ? _this5.onChangesFullscreen(true) : _this5.onChangesFullscreen(false);\n        });\n      }\n    }, {\n      key: \"setFullscreen\",\n      value: function setFullscreen(value) {\n        if (this.canFullscreen && this.fullscreen !== value) this.toggleFullscreen();\n      }\n    }, {\n      key: \"toggleFullscreen\",\n      value: function toggleFullscreen() {\n        this.fullscreen = !this.fullscreen;\n        this.updateFullscreen();\n      }\n    }, {\n      key: \"updateFullscreen\",\n      value: function updateFullscreen() {\n        this.fullscreen ? this.fscreen.request(this.player) : this.fscreen.exit();\n        this.fullscreenChanged.emit(this.fullscreen);\n      }\n    }, {\n      key: \"onChangesFullscreen\",\n      value: function onChangesFullscreen(value) {\n        this.fullscreen = value;\n        this.fullscreenChanged.emit(this.fullscreen);\n      }\n    }, {\n      key: \"onFullscreenKey\",\n      value: function onFullscreenKey(event) {\n        if (this.keyboard) {\n          this.toggleFullscreen();\n          event.preventDefault();\n        }\n      }\n    }]);\n\n    return MatFullscreenButtonComponent;\n  }();\n\n  MatFullscreenButtonComponent.ɵfac = function MatFullscreenButtonComponent_Factory(t) {\n    return new (t || MatFullscreenButtonComponent)(ɵngcc0.ɵɵdirectiveInject(FullscreenService), ɵngcc0.ɵɵdirectiveInject(EventService));\n  };\n\n  MatFullscreenButtonComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MatFullscreenButtonComponent,\n    selectors: [[\"mat-fullscreen-button\"]],\n    hostBindings: function MatFullscreenButtonComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keyup.f\", function MatFullscreenButtonComponent_keyup_f_HostBindingHandler($event) {\n          return ctx.onFullscreenKey($event);\n        }, false, ɵngcc0.ɵɵresolveDocument);\n      }\n    },\n    inputs: {\n      fullscreen: \"fullscreen\",\n      keyboard: \"keyboard\",\n      player: \"player\"\n    },\n    outputs: {\n      fullscreenChanged: \"fullscreenChanged\"\n    },\n    decls: 3,\n    vars: 3,\n    consts: [[\"mat-icon-button\", \"\", 3, \"disabled\", \"click\"], [4, \"ngIf\"]],\n    template: function MatFullscreenButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"button\", 0);\n        ɵngcc0.ɵɵlistener(\"click\", function MatFullscreenButtonComponent_Template_button_click_0_listener() {\n          return ctx.toggleFullscreen();\n        });\n        ɵngcc0.ɵɵtemplate(1, MatFullscreenButtonComponent_mat_icon_1_Template, 2, 0, \"mat-icon\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatFullscreenButtonComponent_mat_icon_2_Template, 2, 0, \"mat-icon\", 1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"disabled\", !ctx.canFullscreen);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.fullscreen);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.fullscreen);\n      }\n    },\n    directives: [ɵngcc4.MatButton, ɵngcc1.NgIf, ɵngcc5.MatIcon],\n    styles: [\"\"]\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", HTMLVideoElement)], MatFullscreenButtonComponent.prototype, \"player\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], MatFullscreenButtonComponent.prototype, \"fullscreen\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", Object)], MatFullscreenButtonComponent.prototype, \"fullscreenChanged\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], MatFullscreenButtonComponent.prototype, \"keyboard\", void 0);\n\n  __decorate([HostListener('document:keyup.f', ['$event']), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [KeyboardEvent]), __metadata(\"design:returntype\", void 0)], MatFullscreenButtonComponent.prototype, \"onFullscreenKey\", null);\n\n  MatFullscreenButtonComponent = __decorate([__metadata(\"design:paramtypes\", [FullscreenService, EventService])], MatFullscreenButtonComponent);\n  return MatFullscreenButtonComponent;\n})();\nvar MatPlayButtonComponent = /*#__PURE__*/(function () {\n  var MatPlayButtonComponent = /*#__PURE__*/function () {\n    function MatPlayButtonComponent(renderer, evt) {\n      _classCallCheck(this, MatPlayButtonComponent);\n\n      this.renderer = renderer;\n      this.evt = evt;\n      this.play = false;\n      this.playChanged = new EventEmitter();\n      this.keyboard = true;\n    }\n\n    _createClass(MatPlayButtonComponent, [{\n      key: \"ngAfterViewInit\",\n      value: function ngAfterViewInit() {\n        var _this6 = this;\n\n        this.events = [{\n          element: this.video,\n          name: 'play',\n          callback: function callback(event) {\n            return _this6.setVideoPlayback(true);\n          },\n          dispose: null\n        }, {\n          element: this.video,\n          name: 'pause',\n          callback: function callback(event) {\n            return _this6.setVideoPlayback(false);\n          },\n          dispose: null\n        }, {\n          element: this.video,\n          name: 'durationchange',\n          callback: function callback(event) {\n            return _this6.setVideoPlayback(false);\n          },\n          dispose: null\n        }, {\n          element: this.video,\n          name: 'ended',\n          callback: function callback(event) {\n            return _this6.setVideoPlayback(false);\n          },\n          dispose: null\n        }, {\n          element: this.video,\n          name: 'click',\n          callback: function callback(event) {\n            return _this6.toggleVideoPlayback();\n          },\n          dispose: null\n        }];\n        this.evt.addEvents(this.renderer, this.events);\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this.evt.removeEvents(this.events);\n      }\n    }, {\n      key: \"setVideoPlayback\",\n      value: function setVideoPlayback(value) {\n        if (this.play !== value) this.toggleVideoPlayback();\n      }\n    }, {\n      key: \"toggleVideoPlayback\",\n      value: function toggleVideoPlayback() {\n        this.play = !this.play;\n        this.updateVideoPlayback();\n      }\n    }, {\n      key: \"updateVideoPlayback\",\n      value: function updateVideoPlayback() {\n        this.play ? this.video.play() : this.video.pause();\n        this.playChanged.emit(this.play);\n      }\n    }, {\n      key: \"onPlayKey\",\n      value: function onPlayKey(event) {\n        if (this.keyboard) {\n          this.toggleVideoPlayback();\n          event.preventDefault();\n        }\n      }\n    }]);\n\n    return MatPlayButtonComponent;\n  }();\n\n  MatPlayButtonComponent.ɵfac = function MatPlayButtonComponent_Factory(t) {\n    return new (t || MatPlayButtonComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(EventService));\n  };\n\n  MatPlayButtonComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MatPlayButtonComponent,\n    selectors: [[\"mat-play-button\"]],\n    hostBindings: function MatPlayButtonComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keyup.space\", function MatPlayButtonComponent_keyup_space_HostBindingHandler($event) {\n          return ctx.onPlayKey($event);\n        }, false, ɵngcc0.ɵɵresolveDocument);\n      }\n    },\n    inputs: {\n      play: \"play\",\n      keyboard: \"keyboard\",\n      video: \"video\"\n    },\n    outputs: {\n      playChanged: \"playChanged\"\n    },\n    decls: 3,\n    vars: 2,\n    consts: [[\"mat-icon-button\", \"\", 3, \"click\"], [4, \"ngIf\"]],\n    template: function MatPlayButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"button\", 0);\n        ɵngcc0.ɵɵlistener(\"click\", function MatPlayButtonComponent_Template_button_click_0_listener() {\n          return ctx.toggleVideoPlayback();\n        });\n        ɵngcc0.ɵɵtemplate(1, MatPlayButtonComponent_mat_icon_1_Template, 2, 0, \"mat-icon\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatPlayButtonComponent_mat_icon_2_Template, 2, 0, \"mat-icon\", 1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.play);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.play);\n      }\n    },\n    directives: [ɵngcc4.MatButton, ɵngcc1.NgIf, ɵngcc5.MatIcon],\n    styles: [\"\"]\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", HTMLVideoElement)], MatPlayButtonComponent.prototype, \"video\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], MatPlayButtonComponent.prototype, \"play\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", Object)], MatPlayButtonComponent.prototype, \"playChanged\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], MatPlayButtonComponent.prototype, \"keyboard\", void 0);\n\n  __decorate([HostListener('document:keyup.space', ['$event']), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [KeyboardEvent]), __metadata(\"design:returntype\", void 0)], MatPlayButtonComponent.prototype, \"onPlayKey\", null);\n\n  MatPlayButtonComponent = __decorate([__metadata(\"design:paramtypes\", [Renderer2, EventService])], MatPlayButtonComponent);\n  return MatPlayButtonComponent;\n})();\nvar MatQualityControlComponent = /*#__PURE__*/(function () {\n  var MatQualityControlComponent = /*#__PURE__*/_createClass(function MatQualityControlComponent() {\n    _classCallCheck(this, MatQualityControlComponent);\n  });\n\n  MatQualityControlComponent.ɵfac = function MatQualityControlComponent_Factory(t) {\n    return new (t || MatQualityControlComponent)();\n  };\n\n  MatQualityControlComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MatQualityControlComponent,\n    selectors: [[\"mat-quality-control\"]],\n    inputs: {\n      video: \"video\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"quality\", 4, \"ngIf\"], [1, \"quality\"]],\n    template: function MatQualityControlComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatQualityControlComponent_div_0_Template, 2, 1, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.video && ctx.video.videoHeight);\n      }\n    },\n    directives: [ɵngcc1.NgIf],\n    styles: [\".quality[_ngcontent-%COMP%]{display:inline-block;font-size:12px;padding-left:12px;padding-right:12px}\"]\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", HTMLVideoElement)], MatQualityControlComponent.prototype, \"video\", void 0);\n\n  MatQualityControlComponent = __decorate([__metadata(\"design:paramtypes\", [])], MatQualityControlComponent);\n  return MatQualityControlComponent;\n})();\nvar MatSeekProgressControlComponent = /*#__PURE__*/(function () {\n  var MatSeekProgressControlComponent = /*#__PURE__*/function () {\n    function MatSeekProgressControlComponent(renderer, evt) {\n      _classCallCheck(this, MatSeekProgressControlComponent);\n\n      this.renderer = renderer;\n      this.evt = evt;\n      this.curTimePercent = 0;\n      this.bufTimePercent = 0;\n      this.video = null;\n      this.color = 'primary';\n      this.currentTime = 0;\n      this.currentTimeChanged = new EventEmitter();\n      this.bufferedTime = 0;\n      this.bufferedTimeChanged = new EventEmitter();\n    }\n\n    _createClass(MatSeekProgressControlComponent, [{\n      key: \"ngAfterViewInit\",\n      value: function ngAfterViewInit() {\n        var _this7 = this;\n\n        this.events = [{\n          element: this.video,\n          name: 'seeking',\n          callback: function callback(event) {\n            return _this7.updateCurrentTime(_this7.video.currentTime);\n          },\n          dispose: null\n        }, {\n          element: this.video,\n          name: 'canplaythrough',\n          callback: function callback(event) {\n            return _this7.updateBufferedTime();\n          },\n          dispose: null\n        }, {\n          element: this.video,\n          name: 'timeupdate',\n          callback: function callback(event) {\n            return _this7.updateCurrentTime(_this7.video.currentTime);\n          },\n          dispose: null\n        }, {\n          element: this.video,\n          name: 'progress',\n          callback: function callback(event) {\n            return _this7.updateBufferedTime();\n          },\n          dispose: null\n        }];\n        this.evt.addEvents(this.renderer, this.events);\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this.evt.removeEvents(this.events);\n      }\n    }, {\n      key: \"seekVideo\",\n      value: function seekVideo(value) {\n        var percentage = value / 100;\n        var newTime = this.video.duration * percentage;\n        this.video.currentTime = newTime;\n      }\n    }, {\n      key: \"updateCurrentTime\",\n      value: function updateCurrentTime(time) {\n        this.currentTime = time;\n        this.curTimePercent = this.updateTime(this.currentTimeChanged, this.currentTime);\n      }\n    }, {\n      key: \"updateBufferedTime\",\n      value: function updateBufferedTime() {\n        if (this.video.buffered.length > 0) {\n          var largestBufferValue = 0;\n\n          for (var i = 0; i < this.video.buffered.length; i++) {\n            var cur = this.video.currentTime;\n            var start = this.video.buffered.start(i);\n            var end = this.video.buffered.end(i);\n            if (start <= cur && end > cur && end - start > largestBufferValue) largestBufferValue = end;\n          }\n\n          this.bufferedTime = largestBufferValue;\n          this.bufTimePercent = this.updateTime(this.bufferedTimeChanged, this.bufferedTime);\n        }\n      }\n    }, {\n      key: \"updateTime\",\n      value: function updateTime(emitter, time) {\n        emitter.emit(time);\n        return time / this.video.duration * 100;\n      }\n    }]);\n\n    return MatSeekProgressControlComponent;\n  }();\n\n  MatSeekProgressControlComponent.ɵfac = function MatSeekProgressControlComponent_Factory(t) {\n    return new (t || MatSeekProgressControlComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(EventService));\n  };\n\n  MatSeekProgressControlComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MatSeekProgressControlComponent,\n    selectors: [[\"mat-seek-progress-control\"]],\n    inputs: {\n      video: \"video\",\n      color: \"color\",\n      currentTime: \"currentTime\",\n      bufferedTime: \"bufferedTime\"\n    },\n    outputs: {\n      currentTimeChanged: \"currentTimeChanged\",\n      bufferedTimeChanged: \"bufferedTimeChanged\"\n    },\n    decls: 1,\n    vars: 3,\n    consts: [[\"mode\", \"buffer\", \"step\", \"0.01\", 3, \"color\", \"value\", \"bufferValue\", \"input\"]],\n    template: function MatSeekProgressControlComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"mat-slider-progress-bar\", 0);\n        ɵngcc0.ɵɵlistener(\"input\", function MatSeekProgressControlComponent_Template_mat_slider_progress_bar_input_0_listener($event) {\n          return ctx.seekVideo($event.value);\n        });\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"color\", ctx.color)(\"value\", ctx.curTimePercent)(\"bufferValue\", ctx.bufTimePercent);\n      }\n    },\n    directives: [MatSliderProgressBarComponent],\n    styles: [\"\"]\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", HTMLVideoElement)], MatSeekProgressControlComponent.prototype, \"video\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], MatSeekProgressControlComponent.prototype, \"color\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], MatSeekProgressControlComponent.prototype, \"currentTime\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", Object)], MatSeekProgressControlComponent.prototype, \"currentTimeChanged\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], MatSeekProgressControlComponent.prototype, \"bufferedTime\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", Object)], MatSeekProgressControlComponent.prototype, \"bufferedTimeChanged\", void 0);\n\n  MatSeekProgressControlComponent = __decorate([__metadata(\"design:paramtypes\", [Renderer2, EventService])], MatSeekProgressControlComponent);\n  return MatSeekProgressControlComponent;\n})();\nvar MatTimeControlComponent = /*#__PURE__*/(function () {\n  var MatTimeControlComponent = /*#__PURE__*/_createClass(function MatTimeControlComponent() {\n    _classCallCheck(this, MatTimeControlComponent);\n  });\n\n  MatTimeControlComponent.ɵfac = function MatTimeControlComponent_Factory(t) {\n    return new (t || MatTimeControlComponent)();\n  };\n\n  MatTimeControlComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MatTimeControlComponent,\n    selectors: [[\"mat-time-control\"]],\n    inputs: {\n      video: \"video\"\n    },\n    decls: 4,\n    vars: 6,\n    consts: [[1, \"playtime\"]],\n    template: function MatTimeControlComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵpipe(2, \"secondsToTime\");\n        ɵngcc0.ɵɵpipe(3, \"secondsToTime\");\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate2(\" \", ɵngcc0.ɵɵpipeBind1(2, 2, ctx.video == null ? null : ctx.video.currentTime), \" / \", ɵngcc0.ɵɵpipeBind1(3, 4, ctx.video == null ? null : ctx.video.duration), \"\\n\");\n      }\n    },\n    pipes: [SecondsToTimePipe],\n    styles: [\".playtime[_ngcontent-%COMP%]{display:inline;font-size:12px}\"]\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", HTMLVideoElement)], MatTimeControlComponent.prototype, \"video\", void 0);\n\n  MatTimeControlComponent = __decorate([__metadata(\"design:paramtypes\", [])], MatTimeControlComponent);\n  return MatTimeControlComponent;\n})();\nvar MatVideoSpinnerComponent = /*#__PURE__*/(function () {\n  var MatVideoSpinnerComponent = /*#__PURE__*/function () {\n    function MatVideoSpinnerComponent(renderer, evt) {\n      _classCallCheck(this, MatVideoSpinnerComponent);\n\n      this.renderer = renderer;\n      this.evt = evt;\n      this.spinner = 'spin';\n      this.videoBuffering = false;\n      this.videoLoaded = false;\n      this.events = [];\n    }\n\n    _createClass(MatVideoSpinnerComponent, [{\n      key: \"ngAfterViewInit\",\n      value: function ngAfterViewInit() {\n        var _this8 = this;\n\n        this.events = [{\n          element: this.video,\n          name: 'loadstart',\n          callback: function callback(event) {\n            return _this8.videoLoaded = false;\n          },\n          dispose: null\n        }, {\n          element: this.video,\n          name: 'loadedmetadata',\n          callback: function callback(event) {\n            return _this8.videoLoaded = true;\n          },\n          dispose: null\n        }, {\n          element: this.video,\n          name: 'canplay',\n          callback: function callback(event) {\n            return _this8.videoBuffering = false;\n          },\n          dispose: null\n        }, {\n          element: this.video,\n          name: 'waiting',\n          callback: function callback(event) {\n            return _this8.videoBuffering = true;\n          },\n          dispose: null\n        }, {\n          element: this.video,\n          name: 'durationchange',\n          callback: function callback(event) {\n            return _this8.videoBuffering = true;\n          },\n          dispose: null\n        }];\n\n        this.video.onloadeddata = function () {\n          return _this8.videoLoaded = true;\n        };\n\n        this.evt.addEvents(this.renderer, this.events);\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this.video.onloadeddata = null;\n        this.evt.removeEvents(this.events);\n      }\n    }]);\n\n    return MatVideoSpinnerComponent;\n  }();\n\n  MatVideoSpinnerComponent.ɵfac = function MatVideoSpinnerComponent_Factory(t) {\n    return new (t || MatVideoSpinnerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(EventService));\n  };\n\n  MatVideoSpinnerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MatVideoSpinnerComponent,\n    selectors: [[\"mat-video-spinner\"]],\n    inputs: {\n      spinner: \"spinner\",\n      video: \"video\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"class\", 4, \"ngIf\"]],\n    template: function MatVideoSpinnerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatVideoSpinnerComponent_div_0_Template, 1, 2, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.videoLoaded || ctx.videoBuffering);\n      }\n    },\n    directives: [ɵngcc1.NgIf],\n    styles: [\"[_nghost-%COMP%]{position:absolute;left:calc(50% - 32px);top:calc(50% - 32px);z-index:1}\", \".spin[_ngcontent-%COMP%]{box-sizing:border-box;width:64px;height:64px;border-radius:100%;border:10px solid rgba(255,255,255,.2);border-top-color:#fff;-webkit-animation:1s linear infinite spin;animation:1s linear infinite spin}@-webkit-keyframes spin{0%{-webkit-transform:rotate(0)}100%{-webkit-transform:rotate(360deg)}}@keyframes spin{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}\", \".dot[_ngcontent-%COMP%]{width:64px;height:64px;background-color:#fff;border-radius:100%;-webkit-animation:1s ease-in-out infinite dot;animation:1s ease-in-out infinite dot}@-webkit-keyframes dot{0%{-webkit-transform:scale(0)}100%{-webkit-transform:scale(1);opacity:0}}@keyframes dot{0%{-webkit-transform:scale(0);transform:scale(0)}100%{-webkit-transform:scale(1);transform:scale(1);opacity:0}}\", \".split-ring[_ngcontent-%COMP%]{display:inline-block;width:64px;height:64px}.split-ring[_ngcontent-%COMP%]:after{content:\\\" \\\";display:block;width:46px;height:46px;margin:1px;border-radius:50%;border:5px solid #fff;border-color:#fff transparent;-webkit-animation:1.2s linear infinite split-ring;animation:1.2s linear infinite split-ring}@-webkit-keyframes split-ring{0%{-webkit-transform:rotate(0)}100%{-webkit-transform:rotate(360deg)}}@keyframes split-ring{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}\", \".hourglass[_ngcontent-%COMP%]{display:inline-block;position:relative;width:64px;height:64px}.hourglass[_ngcontent-%COMP%]:after{content:\\\" \\\";display:block;border-radius:50%;width:0;height:0;margin:6px;box-sizing:border-box;border:26px solid #fff;border-color:#fff transparent;-webkit-animation:1.2s infinite hourglass;animation:1.2s infinite hourglass}@-webkit-keyframes hourglass{0%{-webkit-transform:rotate(0);-webkit-animation-timing-function:cubic-bezier(.55,.055,.675,.19)}50%{-webkit-transform:rotate(360deg);-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1)}100%{-webkit-transform:rotate(720deg)}}@keyframes hourglass{0%{-webkit-transform:rotate(0);transform:rotate(0);-webkit-animation-timing-function:cubic-bezier(.55,.055,.675,.19);animation-timing-function:cubic-bezier(.55,.055,.675,.19)}50%{-webkit-transform:rotate(360deg);transform:rotate(360deg);-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}100%{-webkit-transform:rotate(720deg);transform:rotate(720deg)}}\"]\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", HTMLVideoElement)], MatVideoSpinnerComponent.prototype, \"video\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], MatVideoSpinnerComponent.prototype, \"spinner\", void 0);\n\n  MatVideoSpinnerComponent = __decorate([__metadata(\"design:paramtypes\", [Renderer2, EventService])], MatVideoSpinnerComponent);\n  return MatVideoSpinnerComponent;\n})();\nvar MatVolumeControlComponent = /*#__PURE__*/(function () {\n  var MatVolumeControlComponent = /*#__PURE__*/function () {\n    function MatVolumeControlComponent(evt) {\n      _classCallCheck(this, MatVolumeControlComponent);\n\n      this.evt = evt;\n      this.video = null;\n      this.color = 'primary';\n      this.volume = 1;\n      this.volumeChanged = new EventEmitter();\n      this._muted = false;\n      this.mutedChanged = new EventEmitter();\n      this.keyboard = true;\n    }\n\n    _createClass(MatVolumeControlComponent, [{\n      key: \"muted\",\n      get: function get() {\n        return this._muted;\n      },\n      set: function set(v) {\n        this._muted = v;\n        this.video.muted = this._muted;\n      }\n    }, {\n      key: \"setVolume\",\n      value: function setVolume(value) {\n        this.volume = value;\n        this.video.volume = this.volume;\n        this.volumeChanged.emit(this.volume);\n        if (this.volume > 0) this.setMuted(false);\n      }\n    }, {\n      key: \"setMuted\",\n      value: function setMuted(value) {\n        if (this.muted !== value) this.toggleMuted();\n      }\n    }, {\n      key: \"toggleMuted\",\n      value: function toggleMuted() {\n        this.muted = !this.muted;\n        this.updateMuted();\n      }\n    }, {\n      key: \"updateMuted\",\n      value: function updateMuted() {\n        this.video.muted = this.muted;\n        this.mutedChanged.emit(this.muted);\n      }\n    }, {\n      key: \"onMuteKey\",\n      value: function onMuteKey(event) {\n        if (this.keyboard) {\n          this.toggleMuted();\n          event.preventDefault();\n        }\n      }\n    }]);\n\n    return MatVolumeControlComponent;\n  }();\n\n  MatVolumeControlComponent.ɵfac = function MatVolumeControlComponent_Factory(t) {\n    return new (t || MatVolumeControlComponent)(ɵngcc0.ɵɵdirectiveInject(EventService));\n  };\n\n  MatVolumeControlComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MatVolumeControlComponent,\n    selectors: [[\"mat-volume-control\"]],\n    hostBindings: function MatVolumeControlComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keyup.m\", function MatVolumeControlComponent_keyup_m_HostBindingHandler($event) {\n          return ctx.onMuteKey($event);\n        }, false, ɵngcc0.ɵɵresolveDocument);\n      }\n    },\n    inputs: {\n      video: \"video\",\n      color: \"color\",\n      volume: \"volume\",\n      keyboard: \"keyboard\",\n      muted: \"muted\"\n    },\n    outputs: {\n      volumeChanged: \"volumeChanged\",\n      mutedChanged: \"mutedChanged\"\n    },\n    decls: 7,\n    vars: 5,\n    consts: [[1, \"volume-control\"], [\"mat-icon-button\", \"\", 3, \"click\"], [4, \"ngIf\"], [\"min\", \"0\", \"max\", \"1\", \"step\", \"0.01\", \"value\", \"1\", 1, \"volume-slider\", 3, \"color\", \"input\"]],\n    template: function MatVolumeControlComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatVolumeControlComponent_Template_button_click_1_listener() {\n          return ctx.toggleMuted();\n        });\n        ɵngcc0.ɵɵtemplate(2, MatVolumeControlComponent_mat_icon_2_Template, 2, 0, \"mat-icon\", 2);\n        ɵngcc0.ɵɵtemplate(3, MatVolumeControlComponent_mat_icon_3_Template, 2, 0, \"mat-icon\", 2);\n        ɵngcc0.ɵɵtemplate(4, MatVolumeControlComponent_mat_icon_4_Template, 2, 0, \"mat-icon\", 2);\n        ɵngcc0.ɵɵtemplate(5, MatVolumeControlComponent_mat_icon_5_Template, 2, 0, \"mat-icon\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"mat-slider\", 3);\n        ɵngcc0.ɵɵlistener(\"input\", function MatVolumeControlComponent_Template_mat_slider_input_6_listener($event) {\n          return ctx.setVolume($event.value);\n        });\n        ɵngcc0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.muted || ctx.volume === 0);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.muted && ctx.volume > 0 && ctx.volume < 0.25);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.muted && ctx.volume >= 0.25 && ctx.volume < 0.5);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.muted && ctx.volume >= 0.5);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"color\", ctx.color);\n      }\n    },\n    directives: [ɵngcc4.MatButton, ɵngcc1.NgIf, ɵngcc5.MatIcon, ɵngcc6.MatSlider],\n    styles: [\".volume-control[_ngcontent-%COMP%]{display:inline}.volume-slider[_ngcontent-%COMP%]{margin-left:-15px} .mat-slider-thumb{border-color:transparent!important} .mat-slider-track-background{background-color:#d3d3d3!important;-webkit-transform:translateX(0)!important;transform:translateX(0)!important}.volume-control[_ngcontent-%COMP%]   .volume-slider[_ngcontent-%COMP%]{visibility:hidden;opacity:0;min-width:0;width:0;transition:visibility .2s,opacity .2s linear,width .2s linear}.volume-control[_ngcontent-%COMP%]:hover   .volume-slider[_ngcontent-%COMP%]{visibility:visible;opacity:1;min-width:90px;width:90px;transition:opacity .2s linear,width .2s linear,min-width .2s linear}\"]\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", HTMLVideoElement)], MatVolumeControlComponent.prototype, \"video\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], MatVolumeControlComponent.prototype, \"color\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], MatVolumeControlComponent.prototype, \"volume\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", Object)], MatVolumeControlComponent.prototype, \"volumeChanged\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], MatVolumeControlComponent.prototype, \"muted\", null);\n\n  __decorate([Output(), __metadata(\"design:type\", Object)], MatVolumeControlComponent.prototype, \"mutedChanged\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], MatVolumeControlComponent.prototype, \"keyboard\", void 0);\n\n  __decorate([HostListener('document:keyup.m', ['$event']), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [KeyboardEvent]), __metadata(\"design:returntype\", void 0)], MatVolumeControlComponent.prototype, \"onMuteKey\", null);\n\n  MatVolumeControlComponent = __decorate([__metadata(\"design:paramtypes\", [EventService])], MatVolumeControlComponent);\n  return MatVolumeControlComponent;\n})();\nvar MatVideoModule = /*#__PURE__*/(function () {\n  var MatVideoModule = /*#__PURE__*/_createClass(function MatVideoModule() {\n    _classCallCheck(this, MatVideoModule);\n  });\n\n  MatVideoModule.ɵfac = function MatVideoModule_Factory(t) {\n    return new (t || MatVideoModule)();\n  };\n\n  MatVideoModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: MatVideoModule\n  });\n  MatVideoModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    providers: [FullscreenService, EventService],\n    imports: [[CommonModule, MatIconModule, MatButtonModule, MatSliderModule]]\n  });\n  return MatVideoModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatVideoModule, {\n    declarations: function declarations() {\n      return [SecondsToTimePipe, MatVideoComponent, MatSliderProgressBarComponent, MatPlayButtonComponent, MatVolumeControlComponent, MatDownloadButtonComponent, MatFullscreenButtonComponent, MatTimeControlComponent, MatQualityControlComponent, MatVideoSpinnerComponent, MatSeekProgressControlComponent, MatVideoSourceDirective, MatVideoTrackDirective, MatFrameByFrameControlComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, MatIconModule, MatButtonModule, MatSliderModule];\n    },\n    exports: function exports() {\n      return [MatVideoComponent, MatVideoSourceDirective, MatVideoTrackDirective];\n    }\n  });\n})();\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { MatVideoModule, SecondsToTimePipe as ɵa, MatVideoComponent as ɵb, EventService as ɵc, MatSliderProgressBarComponent as ɵd, MatPlayButtonComponent as ɵe, MatVolumeControlComponent as ɵf, MatDownloadButtonComponent as ɵg, MatFullscreenButtonComponent as ɵh, FullscreenService as ɵi, MatTimeControlComponent as ɵj, MatQualityControlComponent as ɵk, MatVideoSpinnerComponent as ɵl, MatSeekProgressControlComponent as ɵm, MatVideoSourceDirective as ɵn, MatVideoTrackDirective as ɵo, MatFrameByFrameControlComponent as ɵp }; //# sourceMappingURL=mat-video.js.map","map":null,"metadata":{},"sourceType":"module"}